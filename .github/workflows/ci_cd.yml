name: CI/CD Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-test:
    name: Lint, Build, Test, Coverage, Sonar
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.3

      - name: Go Linter
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
        working-directory: ./backend

      - name: Build
        run: go build ./...
        working-directory: ./backend

      - name: Run Tests with Coverage
        run: |
          go test -coverprofile=coverage.out ./...
          go tool cover -func=coverage.out | tee coverage.txt
          coverage=$(go tool cover -func=coverage.out | grep total | awk '{print substr($3, 1, length($3)-1)}')
          coverage_int=${coverage%.*}
          if [ "$coverage_int" -lt 95 ]; then
            echo "Code coverage ($coverage%) is below 95%"
            exit 1
          fi
        working-directory: ./backend

      - name: Install Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh
          sudo mv trivy /usr/local/bin/

      - name: Scan source code for vulnerabilities
        run: trivy fs --exit-code 1 --severity HIGH,CRITICAL .

      - name: Build Docker image
        run: docker build -t brokerx-app .

      - name: Scan Docker image for vulnerabilities
        run: trivy image --exit-code 1 --severity HIGH,CRITICAL brokerx-app

  deploy:
    name: Deploy with Docker Compose
    runs-on: self-hosted
    needs: build-test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker
        run: |
          docker compose down || true
          docker compose up -d --build
